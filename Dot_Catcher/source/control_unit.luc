    module control_unit (
        input clk,  // clock
        input rst,  // reset
        input left_button,
        input right_button,
        input start_button,
        input regfile_rd2[32],
        output alufn[6],
        output asel[3],
        output bsel[3],
        output alu_out_sel[2],
        output regfile_wa[3],
        output regfile_ra1[3],
        output regfile_ra2[3],
        output regfile_we,
        output debug[4],
        input player_collided
        //input player_collided
    ) {
    
        sig player_collided_out
        enum GameFSM{
            INIT,
            RESET_PLAYER_LIVES,
            RESET_PLAYER_SCORE,
            RESET_PLAYER_POSITION,
            CHECK_BUTTONPRESS,
            CHECK_PLAYER_COLLISION,
            CHECK_PLAYERLIVES,
            CHECK_DOT,
            UPDATE_PLAYER,
            UPDATE_DOT,
            GAME_OVER
        }
        
        dff gameStates[$width(GameFSM)](#INIT(GameFSM.INIT), .clk(clk), .rst(rst))
        
        always {
            // standard setting unless otherwise overwritten by each case 
            alufn = 0
            asel = 0 
            bsel = 0
            regfile_we = 0
            regfile_wa = d6
            regfile_ra1 = d0
            regfile_ra2 = d0
            alu_out_sel = 0
            debug = b0000
            player_collided_out = player_collided
            
            gameStates.d = gameStates.q
            if (rst){
                gameStates.d = GameFSM.INIT
            }
            else{
                case(gameStates.q){
                    GameFSM.INIT:
                        gameStates.d = GameFSM.RESET_PLAYER_LIVES
                    GameFSM.RESET_PLAYER_LIVES:
                        alufn = 6h1A
                        asel = b01
                        bsel = b00
                        regfile_we = 1
                        regfile_wa = d0
                        
                        //regfile_ra2 = d0
                        //debug = regfile_rd2[3:0]
                        gameStates.d = GameFSM.RESET_PLAYER_SCORE
                    GameFSM.RESET_PLAYER_SCORE:
                        alufn = 6h1A
                        asel = b11
                        bsel = b00
                        regfile_we = 1
                        regfile_wa = d1
                        
                        //regfile_ra2 = d1
                        //debug = regfile_rd2[3:0]
                        gameStates.d = GameFSM.RESET_PLAYER_POSITION
                    GameFSM.RESET_PLAYER_POSITION:
                        alufn = 6h1A
                        asel = b01
                        bsel = b00
                        regfile_we = 1
                        regfile_wa = d2
                        
                        alufn = 6h1A
                        asel = b01
                        bsel = b00
                        regfile_we = 1
                        regfile_wa = d3
                        
                        //regfile_ra2 = d2
                        //debug = regfile_rd2[3:0]
                        gameStates.d = GameFSM.CHECK_BUTTONPRESS
                    GameFSM.CHECK_BUTTONPRESS:
                        regfile_ra1 = d2
                        if(left_button){
                            if(regfile_rd2 > 0){
                                alufn = 6h01
                                asel = b00
                                bsel = b01
                                regfile_we = 1
                                regfile_wa = d2
                            }
                        }
                        else if(right_button){
                            if(regfile_rd2 < 7){
                                alufn = 6h00
                                asel = b00
                                bsel = b01
                                regfile_we = 1
                                regfile_wa = d2
                            }
                        }
                        //regfile_ra2 = d2
                        //debug = regfile_rd2[3:0]
                        gameStates.d = GameFSM.CHECK_PLAYER_COLLISION
                    GameFSM.CHECK_PLAYER_COLLISION:
                        player_collided_out = player_collided
                        if(player_collided_out){
                            regfile_ra1 = d1 // read player score reg R1
                            alufn = 6h00 // ALU ADD
                            asel = b00 // RD1 output
                            bsel = b01 // const 1
                            regfile_we = 1 // write to Reg
                            regfile_wa = d1
                        
                            regfile_ra2 = d2
                            debug = regfile_rd2[3:0]
                        }
                        gameStates.d = GameFSM.CHECK_BUTTONPRESS
                    }
                }
            }
        }