/*
    This file was generated automatically by Alchitry Labs 2.0.29-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module regfile_unit (
        input wire clk,
        input wire rst,
        input wire [4:0] ra,
        input wire [4:0] rb,
        input wire [4:0] rc,
        input wire wasel,
        input wire ra2sel,
        input wire werf,
        input wire [31:0] wdsel_out,
        input wire slowclk,
        output reg z,
        output reg [31:0] rd1,
        output reg [31:0] rd2,
        output reg [31:0] mwd
    );
    logic [4:0] M_regfile_ra1;
    logic [4:0] M_regfile_ra2;
    logic [31:0] M_regfile_rd1;
    logic [31:0] M_regfile_rd2;
    logic [4:0] M_regfile_wa;
    logic [31:0] M_regfile_wd;
    logic M_regfile_we;
    
    regfile_memory regfile (
        .clk(clk),
        .rst(rst),
        .ra1(M_regfile_ra1),
        .ra2(M_regfile_ra2),
        .rd1(M_regfile_rd1),
        .rd2(M_regfile_rd2),
        .wa(M_regfile_wa),
        .wd(M_regfile_wd),
        .we(M_regfile_we)
    );
    
    
    logic [4:0] ra2sel_out;
    logic [4:0] wasel_out;
    always @* begin
        mwd = 1'h0;
        z = 1'h0;
        ra2sel_out = 1'h0;
        wasel_out = 1'h0;
        M_regfile_we = 1'h0;
        if (slowclk) begin
            M_regfile_we = werf;
        end
        
        case (ra2sel)
            1'h0: begin
                ra2sel_out = rb;
            end
            1'h1: begin
                ra2sel_out = rc;
            end
            default: begin
                ra2sel_out = rb;
            end
        endcase
        
        case (wasel)
            1'h0: begin
                wasel_out = rc;
            end
            1'h1: begin
                wasel_out = 5'h1e;
            end
            default: begin
                wasel_out = rc;
            end
        endcase
        M_regfile_ra2 = ra2sel_out;
        M_regfile_ra1 = ra;
        M_regfile_wa = wasel_out;
        M_regfile_wd = wdsel_out;
        z = (~(|M_regfile_rd1));
        mwd = M_regfile_rd2;
        rd1 = M_regfile_rd1;
        rd2 = M_regfile_rd2;
    end
    
    
endmodule