Copyright 1986-2022 Xilinx, Inc. All Rights Reserved. Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2024.2 (win64) Build 5239630 Fri Nov 08 22:35:27 MST 2024
| Date         : Mon Apr 14 16:43:51 2025
| Host         : JC-ZENBOOK running 64-bit major release  (build 9200)
| Command      : report_drc -file alchitry_top_drc_opted.rpt -pb alchitry_top_drc_opted.pb -rpx alchitry_top_drc_opted.rpx
| Design       : alchitry_top
| Device       : xc7a35tftg256-1
| Speed File   : -1
| Design State : Synthesized
---------------------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max checks: <unlimited>
             Checks found: 16
+-----------+----------+----------------------------+--------+
| Rule      | Severity | Description                | Checks |
+-----------+----------+----------------------------+--------+
| DPIP-1    | Warning  | Input pipelining           | 6      |
| DPOP-1    | Warning  | PREG Output pipelining     | 3      |
| DPOP-2    | Warning  | MREG Output pipelining     | 3      |
| REQP-1840 | Warning  | RAMB18 async control check | 4      |
+-----------+----------+----------------------------+--------+

2. REPORT DETAILS
-----------------
DPIP-1#1 Warning
Input pipelining  
DSP beta_manual/motherboard/beta/alu_system/divider/div0 input beta_manual/motherboard/beta/alu_system/divider/div0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP beta_manual/motherboard/beta/alu_system/divider/div0 input beta_manual/motherboard/beta/alu_system/divider/div0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP beta_manual/motherboard/beta/alu_system/divider/div0__0 input beta_manual/motherboard/beta/alu_system/divider/div0__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP beta_manual/motherboard/beta/alu_system/divider/div0__0 input beta_manual/motherboard/beta/alu_system/divider/div0__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#5 Warning
Input pipelining  
DSP beta_manual/motherboard/beta/alu_system/divider/div0__1 input beta_manual/motherboard/beta/alu_system/divider/div0__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#6 Warning
Input pipelining  
DSP beta_manual/motherboard/beta/alu_system/divider/div0__1 input beta_manual/motherboard/beta/alu_system/divider/div0__1/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP beta_manual/motherboard/beta/alu_system/divider/div0 output beta_manual/motherboard/beta/alu_system/divider/div0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP beta_manual/motherboard/beta/alu_system/divider/div0__0 output beta_manual/motherboard/beta/alu_system/divider/div0__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP beta_manual/motherboard/beta/alu_system/divider/div0__1 output beta_manual/motherboard/beta/alu_system/divider/div0__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP beta_manual/motherboard/beta/alu_system/divider/div0 multiplier stage beta_manual/motherboard/beta/alu_system/divider/div0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP beta_manual/motherboard/beta/alu_system/divider/div0__0 multiplier stage beta_manual/motherboard/beta/alu_system/divider/div0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP beta_manual/motherboard/beta/alu_system/divider/div0__1 multiplier stage beta_manual/motherboard/beta/alu_system/divider/div0__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

REQP-1840#1 Warning
RAMB18 async control check  
The RAMB18E1 beta_manual/motherboard/memory_unit/data_memory/mem_reg has an input control pin beta_manual/motherboard/memory_unit/data_memory/mem_reg/WEBWE[0] (net: beta_manual/motherboard/memory_unit/data_memory/WEBWE[0]) which is driven by a register (reset_cond/D_stage_q_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#2 Warning
RAMB18 async control check  
The RAMB18E1 beta_manual/motherboard/memory_unit/data_memory/mem_reg has an input control pin beta_manual/motherboard/memory_unit/data_memory/mem_reg/WEBWE[1] (net: beta_manual/motherboard/memory_unit/data_memory/WEBWE[0]) which is driven by a register (reset_cond/D_stage_q_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#3 Warning
RAMB18 async control check  
The RAMB18E1 beta_manual/motherboard/memory_unit/data_memory/mem_reg has an input control pin beta_manual/motherboard/memory_unit/data_memory/mem_reg/WEBWE[2] (net: beta_manual/motherboard/memory_unit/data_memory/WEBWE[0]) which is driven by a register (reset_cond/D_stage_q_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#4 Warning
RAMB18 async control check  
The RAMB18E1 beta_manual/motherboard/memory_unit/data_memory/mem_reg has an input control pin beta_manual/motherboard/memory_unit/data_memory/mem_reg/WEBWE[3] (net: beta_manual/motherboard/memory_unit/data_memory/WEBWE[0]) which is driven by a register (reset_cond/D_stage_q_reg[3]) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>


