module alchitry_top (
    input clk,              // 100MHz clock
    input rst_n,            // reset button (active low)
    output led[8],          // 8 user controllable LEDs
    input usb_rx,           // USB->Serial input
    output usb_tx,           // USB->Serial output
    
    output io_led[3][8],     // LEDs on IO Shield
    output io_segment[8],        // 7-segment LEDs on IO Shield
    output io_select[4],        // Digit select on IO Shield
    input io_button[5],      // 5 buttons on IO Shield
    input io_dip[3][8]       // DIP switches on IO Shield
) {

    sig rst                 // reset signal

    .clk(clk) {
        // The reset conditioner is used to synchronize the reset signal to the FPGA
        // clock. This ensures the entire FPGA comes out of reset at the same time.
        reset_conditioner reset_cond
    }   
    alu a1
    always {
        io_led = 3x{ {8h00} }
        io_select = 4hF
        io_segment = 8h00
        a1.a = c{16h0000,io_dip[0]}
        a1.b = c{16h0000,io_dip[1]}
        a1.alufn = 0
        io_led[0] = a1.out[7:0]
        io_led[1] = a1.out[15:8]
        
        io_led[2][0] = a1.v
        io_led[2][1] = a1.n
        io_led[2][2] = a1.z
        reset_cond.in = ~rst_n  // input raw inverted reset signal
        rst = reset_cond.out    // conditioned reset

        led = 8h00              // turn LEDs off

        usb_tx = usb_rx         // echo the serial data
    }
}