module shift_lookup (
    input num[6],  // 5-bit input to represent values 0â€“31
    output bin[5]  // 5-bit binary output
) {
    always {
        case (num) {
            d0:  bin = 5b00000
            d1:  bin = 5b00001
            d2:  bin = 5b00010
            d3:  bin = 5b00011
            d4:  bin = 5b00100
            d5:  bin = 5b00101
            d6:  bin = 5b00110
            d7:  bin = 5b00111
            d8:  bin = 5b01000
            d9:  bin = 5b01001
            d10: bin = 5b01010
            d11: bin = 5b01011
            d12: bin = 5b01100
            d13: bin = 5b01101
            d14: bin = 5b01110
            d15: bin = 5b01111
            d16: bin = 5b10000
            d17: bin = 5b10001
            d18: bin = 5b10010
            d19: bin = 5b10011
            d20: bin = 5b10100
            d21: bin = 5b10101
            d22: bin = 5b10110
            d23: bin = 5b10111
            d24: bin = 5b11000
            d25: bin = 5b11001
            d26: bin = 5b11010
            d27: bin = 5b11011
            d28: bin = 5b11100
            d29: bin = 5b11101
            d30: bin = 5b11110
            d31: bin = 5b11111
            default: bin = 5b00000  // Handle unexpected inputs
        }
    }
}