/*
    This file was generated automatically by Alchitry Labs 2.0.29-BETA.
    Do not edit this file directly. Instead edit the original Lucid source.
    This is a temporary file and any changes made to it will be destroyed.
*/

module adder (
        input wire [31:0] a,
        input wire [31:0] b,
        input wire [5:0] alufn,
        output reg [31:0] s,
        output reg z,
        output reg v,
        output reg n
    );
    logic [31:0] b_neg;
    logic overflow;
    localparam _MP_SIZE_1161131336 = 6'h20;
    logic [31:0] M_rca_unit_a;
    logic [31:0] M_rca_unit_b;
    logic M_rca_unit_cin;
    logic [31:0] M_rca_unit_s;
    logic M_rca_unit_cout;
    
    rca #(
        .SIZE(_MP_SIZE_1161131336)
    ) rca_unit (
        .a(M_rca_unit_a),
        .b(M_rca_unit_b),
        .cin(M_rca_unit_cin),
        .s(M_rca_unit_s),
        .cout(M_rca_unit_cout)
    );
    
    
    always @* begin
        M_rca_unit_a = a;
        b_neg = b ^ {6'h20{alufn[1'h0]}};
        M_rca_unit_b = b_neg;
        M_rca_unit_cin = alufn[1'h0];
        s = M_rca_unit_s;
        z = (M_rca_unit_s == 32'h0);
        overflow = (a[5'h1f] == b_neg[5'h1f]) && (M_rca_unit_s[5'h1f] != a[5'h1f]);
        v = overflow;
        n = M_rca_unit_s[5'h1f];
    end
    
    
endmodule